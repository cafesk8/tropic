apiVersion: v1
kind: ConfigMap
metadata:
    name: nginx-default-config
data:
    nginx.conf: |
        user  nginx;
        worker_processes auto;

        error_log   /dev/stderr warn;
        pid         /var/run/nginx.pid;

        events {
            # determines how much clients will be served per worker
            # max clients = worker_connections * worker_processes
            # max clients is also limited by the number of socket connections available on the system (~64k)
            worker_connections 30000;
        }

        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

            access_log /dev/stdout;

            sendfile        on;
            #tcp_nopush     on;

            keepalive_timeout  65;

            include /etc/nginx/conf.d/*.conf;
        }
    project-nginx.conf: |
        upstream php-upstream {
            server php-fpm:9000;
        }

        server {
            add_header VSHCDN-WEBP-QUALITY 95;
            listen 80;
            root /var/www/html/web;

            location /health {
                stub_status  on;
                access_log   off;
            }
        }

        server {
            add_header VSHCDN-WEBP-QUALITY 95;
            listen 8080;
            root /var/www/html/web;
            server_tokens off;
            proxy_ignore_client_abort on;

            proxy_buffer_size 16k;
            proxy_buffers 32 16k;

            client_body_buffer_size 64m;
            client_max_body_size    64m;

            fastcgi_buffer_size 16k;
            fastcgi_buffers 32 16k;

            set_real_ip_from  10.0.0.0/8;
            real_ip_header    X-Forwarded-For;
            real_ip_recursive on;

            location ~ /\. {
                # hide dotfiles (send to @app)
                try_files @app @app;
            }
            location ~ ^/index.php$ {
                # hide index.php (send to @app)
                try_files @app @app;
            }
            location / {
                # try to serve existing files directly, fallback to @app
                try_files $uri @app;

                # Enable compression of JavaScripts and CSS
                location ~ (\.js|\.css)$ {
                    gzip on;
                    gzip_types text/javascript text/css;

                    # Cache versioned static content for 1 year
                    location ~ ((-v[0-9]+\.js)|(_[0-9]+\.css))$ {
                        expires 1y;

                        # (try_files directive is not inherited from the parent location so we have to repeat it)
                        try_files $uri @app;
                    }

                    # (try_files directive is not inherited from the parent location so we have to repeat it)
                    try_files $uri @app;
                }

                location ~ ^/content/ {
                    # VSHosting DNS
                    resolver                78.24.12.150;
                    proxy_intercept_errors  on;
                    error_page              404 = @app;

                    proxy_http_version      1.1;
                    proxy_set_header        Authorization "";
                    proxy_buffering         off;

                    proxy_pass              https://shopsys-nas-minio.vshosting.cz:9000/{{PROJECT_NAME}}/web$request_uri;
                }

                location ~ ^/content(-test)?/images/ {
                    # Newly uploaded images get new ID (different URL) so they could be cached forever.
                    # But change of resolution in images.yml does not induce a change of URL
                    # so it is safer to cache generated images only for few days.
                    expires 1w;

                    # (try_files directive is not inherited from the parent location so we have to repeat it)
                    try_files $uri @app;
                }
            }

            location @app {
                fastcgi_pass php-upstream;
                include fastcgi_params;
                # use $realpath_root instead of $document_root
                # because of symlink switching when deploying
                fastcgi_send_timeout 120s;
                fastcgi_read_timeout 120s;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
                fastcgi_param SCRIPT_FILENAME $realpath_root/index.php;
                fastcgi_param HTTPS $http_x_forwarded_proto;
            }
        }
