<?xml version="1.0" encoding="UTF-8"?>
<project name="Shopsys Framework" default="list">

    <property file="${project.basedir}/build/build.local.properties"/>

    <property name="path.root" value="${project.basedir}"/>
    <property name="path.vendor" value="${path.root}/vendor"/>
    <property name="path.framework" value="${path.vendor}/shopsys/framework"/>

    <property name="is-multidomain" value="true"/>
    <property name="phpstan.level" value="1"/>
    <property name="translations.dump.locales" value="cs sk de"/>

    <import file="${path.framework}/build.xml"/>

    <target name="checks-ci" depends="db-check-mapping,test-db-demo" description="Checks ORM mapping and runs DB, smoke and acceptance tests.">
        <phingcall target="tests-functional"/>
        <phingcall target="tests-smoke"/>
    </target>
    <target name="checks-ci-diff" depends="db-check-mapping,test-db-demo,tests-functional,tests-smoke" description="Checks ORM mapping and runs DB, smoke and acceptance tests."/>

    <target name="cron-default" description="Runs default background jobs. Should be executed periodically by system Cron every 5 minutes.">
        <exec executable="${path.php.executable}" passthru="true" checkreturn="true">
            <arg value="${path.bin-console}" />
            <arg value="shopsys:cron" />
            <arg value="--instance-name=default" />
        </exec>
    </target>

    <target name="cron-customers" description="Runs customers background jobs. Should be executed periodically by system Cron every 5 minutes.">
        <exec executable="${path.php.executable}" passthru="true" checkreturn="true">
            <arg value="${path.bin-console}" />
            <arg value="shopsys:cron" />
            <arg value="--instance-name=customers" />
        </exec>
    </target>

    <target name="tests" depends="test-db-demo,tests-unit" description="Runs unit, functional and smoke tests. Builds new test database in the process.">
        <phingcall target="tests-functional"/>
        <phingcall target="tests-smoke"/>
    </target>

    <target name="maintenance-off" description="Turns the maintenance page off.">
        <exec executable="${path.php.executable}" passthru="true" checkreturn="true">
            <arg value="${path.bin-console}" />
            <arg value="shopsys:maintenance" />
            <arg value="disable" />
        </exec>
    </target>

    <target name="maintenance-on" description="Turns the maintenance page on.">
        <exec executable="${path.php.executable}" passthru="true" checkreturn="true">
            <arg value="${path.bin-console}" />
            <arg value="shopsys:maintenance" />
            <arg value="enable" />
        </exec>
    </target>

    <target name="db-migrations-count-with-maintenance" description="Get count of database migrations to execute and enable maintenance mode if needed.">
        <exec executable="${path.php.executable}" checkreturn="true" outputProperty="migrationCounts">
            <arg value="${path.bin-console}"/>
            <arg value="shopsys:migrations:count"/>
        </exec>
        <if>
            <contains string="${migrationCounts}" substring="Count of migrations to execute: 0" />
            <then>
                <echo message="There is no need to enable maintenance mode" />
            </then>
            <else>
                <phingcall target="maintenance-on" />
            </else>
        </if>
    </target>

    <target name="build-deploy-part-2-db-dependent" depends="product-search-migrate-structure,redis-check,db-migrations-count-with-maintenance,db-migrations,domains-data-create,friendly-urls-generate,domains-urls-replace,grunt,error-pages-generate,warmup,clean-redis-old" description="Second part of application build for production preserving your DB (must be run with maintenance page when containing DB migrations)."/>

    <target name="npm" description="Installs modules required for Grunt.">
        <exec executable="${path.npm.executable}" dir="${path.root}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="install"/>
        </exec>
    </target>

    <target name="clean-all" depends="clean, clean-redis" description="Second part of application build for production preserving your DB (must be run with maintenance page when containing DB migrations)."/>

</project>
